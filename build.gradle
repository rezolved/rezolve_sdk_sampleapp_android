// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        rezolveSdkVersion = "1001-claro_merge-3a16f2f"
        rezolveSdkScanVersion = "2162-claro-1410cba"
        jjwtVersion = "0.11.5"
        rxJavaVersion = "2.2.8"
        rxAndroidVersion = "2.1.1"
        retrofitVersion = "2.5.0"
        permissionsVersion = "3.8"
        glideVersion = "4.9.0"
        parcelerVersion = "1.1.12"
        carouselViewVersion = "0.1.5"
        loadingAnimationVersion = "1.2.0"
        lifecycleVersion = "2.2.0"
    }

    repositories {
        mavenLocal()
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0'
        classpath 'com.google.gms:google-services:4.3.15'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'net.nemerosa.versioning' version '2.7.1'
}

def getCommitCount = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--all', '--count'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

versioning {
    gitRepoRootDir = rootProject.getRootDir().absolutePath

    displayMode = { branchType, branchId, base, build, full, extension ->
        "${getCommitCount}-${full}"
    }

    releaseMode = { nextTag, lastTag, currentTag, extension ->
        "${lastTag}"
    }

    dirtySuffix = '-uncommitted'

    branchEnv = ['BITRISE_GIT_BRANCH']
}

allprojects {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        jcenter()
        maven {
            url NEXUS_REZOLVE_REPO_URL_PUBLIC
            credentials {
                username NEXUS_REZOLVE_READ_USERNAME
                password NEXUS_REZOLVE_READ_PASSWORD
            }
        }
    }

    version = "${versioning.info.display}"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task displayAppVersion() {
    println version
}
