apply plugin: 'com.android.application'

android {
    compileSdkVersion 34
    namespace 'com.rezolve.sdk_sample'

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 34
        versionCode 1
        versionName "$version"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', "REZOLVE_SDK_API_URL", REZOLVE_SDK_API_URL
        buildConfigField 'String', "REZOLVE_SDK_ENVIRONMENT", REZOLVE_SDK_ENVIRONMENT
        buildConfigField 'String', "REZOLVE_SDK_API_KEY", REZOLVE_SDK_API_KEY
        buildConfigField 'String', "REZOLVE_SDK_JWT_SECRET", REZOLVE_SDK_JWT_SECRET
        buildConfigField 'String', "DEMO_AUTH_SERVER", DEMO_AUTH_SERVER
        buildConfigField 'String', "DEMO_AUTH_USER", DEMO_AUTH_USER
        buildConfigField 'String', "DEMO_AUTH_PASSWORD", DEMO_AUTH_PASSWORD
        buildConfigField 'String', "AUTH0_CLIENT_ID", AUTH0_CLIENT_ID
        buildConfigField 'String', "AUTH0_CLIENT_SECRET", AUTH0_CLIENT_SECRET
        buildConfigField 'String', "AUTH0_API_KEY", AUTH0_API_KEY
        buildConfigField 'String', "AUTH0_AUDIENCE", AUTH0_AUDIENCE
        buildConfigField 'String', "AUTH0_ENDPOINT", AUTH0_ENDPOINT
        buildConfigField 'String', "SSP_ENDPOINT", SSP_ENDPOINT
        buildConfigField 'String', "SSP_ENGAGEMENT_ENDPOINT", SSP_ENGAGEMENT_ENDPOINT
        buildConfigField 'String', "SSP_ACT_ENDPOINT", SSP_ACT_ENDPOINT
    }

    signingConfigs {
        release {
            storeFile file('sample.jks')
            storePassword 'store1234'
            keyAlias = 'com.rezolve.sdk_sample'
            keyPassword 'key1234'
        }
    }

    flavorDimensions "type"

    productFlavors {
        sandboxApp {
            dimension "type"
            applicationId "com.rezolve.sdk_sample"
            signingConfig signingConfigs.release
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "artefact-${variant.name}-${variant.applicationId}-${defaultConfig.versionName}.apk"
        }
    }

    packagingOptions {
        jniLibs {
            keepDebugSymbols += ['*/mips/*.so']
            pickFirsts += ['**/*.so']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    lintOptions {
        lintConfig = file("$rootDir/app/src/main/res/xml/lint_config.xml") // https://github.com/bumptech/glide/issues/4940
    }
}

dependencies {

    implementation project(":shared")

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.preference:preference:1.2.1'

    // Rezolve SDK
    implementation "com.rezolve.sdk:old-ssp-android:$rezolveSdkVersion"
    implementation "com.rezolve.sdk:ssp-google-geofence:$rezolveSdkVersion"
    implementation "com.rezolve.sdk:resolver:$rezolveSdkVersion"

    // Rezolve SDK Scan Module
    // Select dependencies based on your needs

    /**
     *  Use this dependency for most basic implementation.
     *  implementation "com.rezolve.sdk:scan-android:$rezolveSdkScanVersion"
     *
     *  It contains the following modules:
     *  scan-video-core
     *  scan-video-barcode
     *  scan-video-watermark-arm64-v8a
     *  scan-video-watermark-armeabi-v7a
     *  scan-video-watermark-x86
     *  scan-audio-watermark
     *  scan-audio-watermark-x86
     */

    // base scan module
    implementation "com.rezolve.sdk:scan-video-core:$rezolveSdkScanVersion"

    // provides barcode detector with Google Play Services dependency
    implementation "com.rezolve.sdk:scan-video-barcode:$rezolveSdkScanVersion"

    // alternative to scan-video-barcode. Doesn't rely on GPS but weights a bit more.
    // See https://developers.google.com/ml-kit/vision/barcode-scanning/android
    //  implementation "com.rezolve.sdk:scan-video-barcode-bundled:$rezolveSdkScanVersion"

    // image watermark detection for arm64 architecture. Covers most modern devices
    implementation "com.rezolve.sdk:scan-video-watermark-arm64-v8a:$rezolveSdkScanVersion"

    // image watermark detection for armeabi-v7a
    implementation "com.rezolve.sdk:scan-video-watermark-armeabi-v7a:$rezolveSdkScanVersion"

    // image watermark detection for emulators
    implementation "com.rezolve.sdk:scan-video-watermark-x86:$rezolveSdkScanVersion"

    // base module for audio watermark detection. Includes arm64 support
    implementation "com.rezolve.sdk:scan-audio-watermark:$rezolveSdkScanVersion"

    // audio watermark for emulators
    implementation "com.rezolve.sdk:scan-audio-watermark-x86:$rezolveSdkScanVersion"

    // JJWT (Json Web Token library)
    api "io.jsonwebtoken:jjwt-api:$jjwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
    runtimeOnly("io.jsonwebtoken:jjwt-orgjson:$jjwtVersion") {
        exclude group: "org.json", module: "json"
    }

    // Parceler
    implementation "org.parceler:parceler-api:$parcelerVersion"
    annotationProcessor "org.parceler:parceler:$parcelerVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

}
